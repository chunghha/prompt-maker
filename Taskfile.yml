version: "3"

env:
  PGM_NAME: prompt_maker
  VERSION: "0.8.1"

tasks:
  # --- Frontend Tasks ---
  frontend:install:
    desc: "Install node.js dependencies using pnpm."
    cmds:
      - pnpm install
    sources:
      - package.json
      - pnpm-lock.yaml
    generates:
      - node_modules/.pnpm-stamp # A file to track if install is needed

  copy:fonts:
    desc: "Copies font files from node_modules to the static directory."
    deps: [frontend:install]
    cmds:
      - mkdir -p static/css/files
      - cp -r node_modules/@fontsource/ibm-plex-sans/files/* static/css/files/
      - cp -r node_modules/@fontsource/lora/files/* static/css/files/
      - cp -r node_modules/@fontsource/ibm-plex-mono/files/* static/css/files/
    generates:
      - static/css/files/ibm-plex-sans-latin-400-normal.woff # More robust check

  frontend:build:
    desc: "Build the CSS from source."
    deps: [copy:fonts] # This now depends on the fonts being copied first.
    cmds:
      - pnpm run css:build
    sources:
      - static/css/input.css
      - tailwind.config.js
      - internal/web/**/*.templ
    generates:
      - static/css/output.css

  # --- Go Tasks ---
  templ:gen:
    desc: "Generate Go code from templ files."
    cmds:
      - templ generate

  build:
    desc: "Build the application binary."
    deps: [typo, format, lint, templ:gen, frontend:build]
    cmds:
      - go mod tidy
      - go build -ldflags="-X 'prompt-maker/cmd.version=$VERSION'" -o $PGM_NAME

  # --- Utility Tasks ---
  run:web:
    desc: "Run the application in web server mode."
    deps: [build]
    cmds:
      - echo "Starting web server on http://localhost:8080"
      - ./$PGM_NAME --web

  format:
    desc: "Format the Go source code."
    cmds:
      - go fmt

  install:
    desc: "Build and install the binary to ~/bin/."
    deps: [build]
    cmds:
      - cp $PGM_NAME ~/bin/

  lint:
    desc: "Run all linters."
    deps: [lint:wsl]
    cmds:
      - golangci-lint run -v

  lint:wsl:
    desc: "Run the WSL linter."
    cmds:
      - golangci-lint run --no-config --enable wsl_v5 --fix

  test:
    desc: "Run all tests."
    cmds:
      - go test ./...

  typo:
    desc: "Check for typos in source files."
    cmds:
      - typos *.go

  typo:fix:
    desc: "Automatically fix typos in source files."
    cmds:
      - typos -w *.go
